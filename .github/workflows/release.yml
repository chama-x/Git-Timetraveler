name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed
            
            * Cross-platform Git Time Traveler CLI
            * Support for macOS, Windows, and Linux
            * Interactive prompts with beautiful progress bars
            * Customizable date/time for commits
            
            ## Installation
            
            ### Via npm (recommended)
            ```bash
            npx @chamax/git-timetraveler --year 1990
            ```
            
            ### Direct download
            Download the appropriate binary for your platform from the assets below.
            
            ## Usage
            ```bash
            git-timetraveler --help
            ```
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary_name: git-timetraveler
            asset_name: git-timetraveler-x86_64-unknown-linux-gnu.tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary_name: git-timetraveler.exe
            asset_name: git-timetraveler-x86_64-pc-windows-msvc.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            binary_name: git-timetraveler
            asset_name: git-timetraveler-x86_64-apple-darwin.tar.gz
          - os: macos-latest
            target: aarch64-apple-darwin
            binary_name: git-timetraveler
            asset_name: git-timetraveler-aarch64-apple-darwin.tar.gz

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create archive (Unix)
        if: matrix.os != 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          tar -czf ../../../${{ matrix.asset_name }} ${{ matrix.binary_name }}

      - name: Create archive (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cd target/${{ matrix.target }}/release
          7z a ../../../${{ matrix.asset_name }} ${{ matrix.binary_name }}

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.asset_name }} 